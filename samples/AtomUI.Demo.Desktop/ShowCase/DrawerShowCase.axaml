<UserControl x:Class="AtomUI.Demo.Desktop.ShowCase.DrawerShowCase"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:atom="https://atomui.net"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:desktop="clr-namespace:AtomUI.Demo.Desktop"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:utils="clr-namespace:AtomUI.Demo.Desktop.Utils"
             mc:Ignorable="d">

    <UserControl.Styles>
        <Style Selector="ListBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="ItemsPanel">
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter>
        </Style>
        <Style Selector="ListBoxItem">
            <Setter Property="Template">
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Background="Transparent"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter>
        </Style>
        <Style Selector="ListBox.PlacementList">
            <Setter Property="ItemTemplate">
                <DataTemplate DataType="atom:DrawerPlacement">
                    <atom:RadioButton Content="{Binding}" IsChecked="{Binding $parent[ListBoxItem].IsSelected}" />
                </DataTemplate>
            </Setter>
        </Style>
        <Style Selector="StackPanel.ControllerPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Spacing" Value="8" />
            <Style Selector="^&gt;:is(Control)">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </Style>
    </UserControl.Styles>

    <desktop:ShowCasePanel>

        <desktop:ShowCaseItem Title="Basic" Description="Basic drawer.">
            <Panel>
                <atom:ToggleSwitch x:Name="OpenButton01" Content="Open" />
                <atom:Drawer IsOpen="{Binding $parent[Panel].((atom:ToggleSwitch)Children[0]).IsChecked}"
                             OpenOn="{Binding $parent[TopLevel]}">
                    <TextBlock Margin="50" Text="Some contents..." />
                </atom:Drawer>
            </Panel>
        </desktop:ShowCaseItem>

        <desktop:ShowCaseItem Title="Custom Placement" Description="The Drawer can appear from any edge of the screen.">
            <Panel>
                <StackPanel Classes="ControllerPanel">
                    <ListBox Classes="PlacementList"
                             ItemsSource="{utils:Enum atom:DrawerPlacement}"
                             SelectedIndex="2" />
                    <atom:ToggleSwitch Content="Open" />
                </StackPanel>

                <atom:Drawer
                    IsOpen="{Binding $parent[Panel].((Panel)Children[0]).((atom:ToggleSwitch)Children[1]).IsChecked}"
                    OpenOn="{Binding $parent[TopLevel]}"
                    Placement="{Binding $parent[Panel].((Panel)Children[0]).((ListBox)Children[0]).SelectedItem}">
                    <TextBlock Margin="50" Text="Some contents..." />
                </atom:Drawer>
            </Panel>
        </desktop:ShowCaseItem>

        <desktop:ShowCaseItem Title="Extra Actions"
                              Description="Extra actions should be placed at corner of drawer in Ant Design, you can use extra prop for that.">
            <Panel>
                <StackPanel Classes="ControllerPanel">
                    <ListBox Classes="PlacementList"
                             ItemsSource="{utils:Enum atom:DrawerPlacement}"
                             SelectedIndex="2" />
                    <atom:ToggleSwitch Content="Open" />
                </StackPanel>

                <atom:Drawer
                    IsOpen="{Binding $parent[Panel].((Panel)Children[0]).((atom:ToggleSwitch)Children[1]).IsChecked}"
                    OpenOn="{Binding $parent[TopLevel]}"
                    Placement="{Binding $parent[Panel].((Panel)Children[0]).((ListBox)Children[0]).SelectedItem}">
                    <TextBlock Margin="50" Text=" TODO " />
                </atom:Drawer>
            </Panel>
        </desktop:ShowCaseItem>

        <desktop:ShowCaseItem Title="Render in current area" Description="Render in current area.">
            <Panel>
                <StackPanel Height="120"
                            atom:Watermark.Glyph="{atom:TextGlyph AtomUI}"
                            Classes="ControllerPanel">
                    <ListBox Classes="PlacementList"
                             ItemsSource="{utils:Enum atom:DrawerPlacement}"
                             SelectedIndex="2" />
                    <atom:ToggleSwitch Content="Open" />
                </StackPanel>

                <atom:Drawer
                    IsOpen="{Binding $parent[Panel].((Panel)Children[0]).((atom:ToggleSwitch)Children[1]).IsChecked}"
                    OpenOn="{Binding $parent[desktop:ShowCaseItem]}"
                    Placement="{Binding $parent[Panel].((Panel)Children[0]).((ListBox)Children[0]).SelectedItem}">
                    <TextBlock Margin="50" Text=" Some contents... " />
                </atom:Drawer>
            </Panel>
        </desktop:ShowCaseItem>

        <desktop:ShowCaseItem Title="Basic" Description="Basic drawer.">
            <Grid ColumnDefinitions="Auto,*">
                <Border Grid.ColumnSpan="2"
                        Height="300"
                        atom:Watermark.Glyph="{atom:TextGlyph 'AtomUI'}" />
                <StackPanel Grid.Column="0">
                    <atom:CheckBox x:Name="ToggleButton1"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Content="Open Drawer #1" />
                    <atom:CheckBox x:Name="ToggleButton2"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Content="Open Drawer #2" />
                    <ComboBox x:Name="CbxHorizontalAlignment" ItemsSource="{utils:Enum atom:DrawerPlacement}" />
                    <Button Click="ButtonOpenOnCurrentParent_OnClick" Content="Open On Current's Parent" />
                </StackPanel>

                <Grid Grid.Column="1" ColumnDefinitions="*,*">
                    <TextBlock Text="Left between a drawer." />
                    <Panel Grid.Column="1">
                        <atom:Drawer x:Name="Drawer1"
                                     Background="Gray"
                                     IsOpen="{Binding #ToggleButton1.IsChecked}"
                                     OpenOn="{Binding $parent[Panel]}"
                                     Placement="{Binding #CbxHorizontalAlignment.SelectedItem}"
                                     ShowMask="True">
                            <Border Background="White">
                                <atom:Button HorizontalAlignment="Right"
                                             VerticalAlignment="Top"
                                             ButtonType="Primary"
                                             Click="Button_OnClick"
                                             Text="Button in Drawer #1" />
                            </Border>
                        </atom:Drawer>
                    </Panel>
                </Grid>


                <atom:Drawer x:Name="Drawer2"
                             Grid.Column="1"
                             Background="Gray"
                             IsOpen="{Binding #ToggleButton2.IsChecked}"
                             Placement="{Binding #CbxHorizontalAlignment.SelectedItem}"
                             ShowMask="True">
                    <Border Background="White">
                        <atom:Button HorizontalAlignment="Right"
                                     VerticalAlignment="Top"
                                     ButtonType="Text"
                                     Click="Button_OnClick"
                                     Text="Button in Drawer #2" />
                    </Border>
                </atom:Drawer>
            </Grid>
        </desktop:ShowCaseItem>

    </desktop:ShowCasePanel>
</UserControl>